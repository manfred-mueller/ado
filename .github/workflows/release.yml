name: Create Release on Push or Manual Trigger

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Find setup file and extract version
        id: get_version
        run: |
          SETUP_FILE=$(ls ./bin/Release/${{ env.REPO_NAME }}_setup-*.exe | head -n 1)
          if [ -z "$SETUP_FILE" ]; then
            echo "Setup file not found!"
            exit 1
          fi
          VERSION=$(basename "$SETUP_FILE" | sed -E "s/${{ env.REPO_NAME }}_setup-(.*)\.exe/\1/")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Setup file is: $SETUP_FILE"
          echo "Version extracted: $VERSION"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Changelog
            - Automatic release for version ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload <reponame>.exe
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/${{ env.REPO_NAME }}.exe
          asset_name: ${{ env.REPO_NAME }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload <reponame>_setup-<version>.exe
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/${{ env.REPO_NAME }}_setup-${{ env.VERSION }}.exe
          asset_name: ${{ env.REPO_NAME }}_setup-${{ env.VERSION }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
